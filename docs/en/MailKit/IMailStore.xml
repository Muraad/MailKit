<Type Name="IMailStore" FullName="MailKit.IMailStore">
  <TypeSignature Language="C#" Value="public interface IMailStore : IDisposable, MailKit.IMailService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMailStore implements class MailKit.IMailService, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>MailKit</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>MailKit.IMailService</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            An interface for retreiving messages from a message store such as IMAP.
            </summary>
    <remarks>
            Implemented by <see cref="T:MailKit.Net.Imap.ImapClient" />.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="Alert">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;MailKit.AlertEventArgs&gt; Alert;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class MailKit.AlertEventArgs&gt; Alert" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;MailKit.AlertEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when a remote message store receives an alert message from the server.
            </summary>
        <remarks>
            Some implementations, such as <see cref="T:MailKit.Net.Imap.ImapClient" />,
            will emit Alert events when they receive alert messages from the server.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableQuickResync">
      <MemberSignature Language="C#" Value="public void EnableQuickResync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnableQuickResync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Enable the quick resynchronization feature.
            </summary>
        <remarks>
          <para>Enables quick resynchronization when a folder is opened using the
            <see cref="M:MailKit.IMailFolder.Open(MailKit.FolderAccess,MailKit.UniqueId,System.UInt64,System.Collections.Generic.IList{MailKit.UniqueId},System.Threading.CancellationToken)" />
            method.</para>
          <para>If this feature is enabled, the <see cref="E:MailKit.IMailFolder.MessageExpunged" /> event
            is replaced with the <see cref="E:MailKit.IMailFolder.MessagesVanished" /> event.</para>
          <para>This method needs to be called immediately after
            <see cref="M:MailKit.IMailService.Authenticate(System.Net.ICredentials,System.Threading.CancellationToken)" />,
            before the opening of any folders.</para>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.MailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The <see cref="T:MailKit.MailStore" /> is not connected, not authenticated, or a folder has been selected.
            </exception>
        <exception cref="T:System.NotSupportedException">
            The mail store does not support quick resynchronization.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            A protocol error occurred.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="EnableQuickResyncAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task EnableQuickResyncAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task EnableQuickResyncAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously enable the quick resynchronization feature.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
          <para>Enables quick resynchronization when a folder is opened using the
            <see cref="M:MailKit.IMailFolder.Open(MailKit.FolderAccess,MailKit.UniqueId,System.UInt64,System.Collections.Generic.IList{MailKit.UniqueId},System.Threading.CancellationToken)" />
            method.</para>
          <para>If this feature is enabled, the <see cref="E:MailKit.IMailFolder.MessageExpunged" /> event
            is replaced with the <see cref="E:MailKit.IMailFolder.MessagesVanished" /> event.</para>
          <para>This method needs to be called immediately after
            <see cref="M:MailKit.IMailService.Authenticate(System.Net.ICredentials,System.Threading.CancellationToken)" />,
            before the opening of any folders.</para>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.MailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The <see cref="T:MailKit.MailStore" /> is not connected, not authenticated, or a folder has been selected.
            </exception>
        <exception cref="T:System.NotSupportedException">
            The mail store does not support quick resynchronization.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            A protocol error occurred.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFolder">
      <MemberSignature Language="C#" Value="public MailKit.IMailFolder GetFolder (MailKit.FolderNamespace namespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MailKit.IMailFolder GetFolder(class MailKit.FolderNamespace namespace) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.IMailFolder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespace" Type="MailKit.FolderNamespace" />
      </Parameters>
      <Docs>
        <param name="namespace">The namespace.</param>
        <summary>
            Get the folder for the specified namespace.
            </summary>
        <returns>The folder.</returns>
        <remarks>
            The main reason to get the toplevel folder in a namespace is
            to list its child folders.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="namespace" /> is <c>null</c>.
            </exception>
        <exception cref="T:MailKit.FolderNotFoundException">
            The folder could not be found.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFolder">
      <MemberSignature Language="C#" Value="public MailKit.IMailFolder GetFolder (MailKit.SpecialFolder folder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MailKit.IMailFolder GetFolder(valuetype MailKit.SpecialFolder folder) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.IMailFolder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="folder" Type="MailKit.SpecialFolder" />
      </Parameters>
      <Docs>
        <param name="folder">The type of special folder.</param>
        <summary>
            Get the specified special folder.
            </summary>
        <returns>The folder if available; otherwise <c>null</c>.</returns>
        <remarks>
            Not all message stores support the concept of special folders,
            so this method may return <c>null</c>.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="folder" /> is out of range.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFolder">
      <MemberSignature Language="C#" Value="public MailKit.IMailFolder GetFolder (string path, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MailKit.IMailFolder GetFolder(string path, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.IMailFolder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="path">The folder path.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Get the folder for the specified path.
            </summary>
        <returns>The folder.</returns>
        <remarks>
            Gets the folder for the specified path.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:MailKit.FolderNotFoundException">
            The folder could not be found.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFolderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;MailKit.IMailFolder&gt; GetFolderAsync (string path, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class MailKit.IMailFolder&gt; GetFolderAsync(string path, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;MailKit.IMailFolder&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="path">The folder path.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously get the folder for the specified path.
            </summary>
        <returns>The folder.</returns>
        <remarks>
            Asynchronously gets the folder for the specified path.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:MailKit.FolderNotFoundException">
            The folder could not be found.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Inbox">
      <MemberSignature Language="C#" Value="public MailKit.IMailFolder Inbox { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MailKit.IMailFolder Inbox" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.IMailFolder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get the Inbox folder.
            </summary>
        <value>The Inbox folder.</value>
        <remarks>
            The Inbox folder is the default folder and is typically the folder
            where all new messages are delivered.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="OtherNamespaces">
      <MemberSignature Language="C#" Value="public MailKit.FolderNamespaceCollection OtherNamespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MailKit.FolderNamespaceCollection OtherNamespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.FolderNamespaceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get the other namespaces.
            </summary>
        <value>The other namespaces.</value>
        <remarks>
            The other folder namespaces contain other mailbox folders.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="PersonalNamespaces">
      <MemberSignature Language="C#" Value="public MailKit.FolderNamespaceCollection PersonalNamespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MailKit.FolderNamespaceCollection PersonalNamespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.FolderNamespaceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get the personal namespaces.
            </summary>
        <value>The personal namespaces.</value>
        <remarks>
            The personal folder namespaces contain a user's personal mailbox folders.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="SharedNamespaces">
      <MemberSignature Language="C#" Value="public MailKit.FolderNamespaceCollection SharedNamespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MailKit.FolderNamespaceCollection SharedNamespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.FolderNamespaceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get the shared namespaces.
            </summary>
        <value>The shared namespaces.</value>
        <remarks>
            The shared folder namespaces contain mailbox folders that are shared with the user.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsQuotas">
      <MemberSignature Language="C#" Value="public bool SupportsQuotas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsQuotas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get whether or not the mail store supports quotas.
            </summary>
        <value>
          <c>true</c> if the mail store supports quotas; otherwise, <c>false</c>.</value>
        <remarks>
            Gets whether or not the mail store supports quotas.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
