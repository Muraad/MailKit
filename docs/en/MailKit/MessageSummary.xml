<Type Name="MessageSummary" FullName="MailKit.MessageSummary">
  <TypeSignature Language="C#" Value="public class MessageSummary : MailKit.IMessageSummary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageSummary extends System.Object implements class MailKit.IMessageSummary, class MailKit.ISortable, class MailKit.IThreadable" />
  <AssemblyInfo>
    <AssemblyName>MailKit</AssemblyName>
    <AssemblyVersion>0.92.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>MailKit.IMessageSummary</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A summary of a message.
            </summary>
    <remarks>
            A <see cref="T:MailKit.MessageSummary" /> is returned by
            <see cref="M:MailKit.IMailFolder.Fetch(System.Collections.Generic.IList{MailKit.UniqueId},MailKit.MessageSummaryItems,System.Threading.CancellationToken)" />.
            The properties of the <see cref="T:MailKit.MessageSummary" /> that will be available
            depend on the <see cref="T:MailKit.MessageSummaryItems" /> passed to the aformentioned method.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageSummary (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 index) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The message index.</param>
        <summary>
            Initializes a new instance of the <see cref="T:MailKit.MessageSummary" /> class.
            </summary>
        <remarks>
            Creates a new <see cref="T:MailKit.MessageSummary" />.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is negative.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Body">
      <MemberSignature Language="C#" Value="public MailKit.BodyPart Body { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MailKit.BodyPart Body" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.BodyPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the body structure of the message, if available.
            </summary>
        <value>The body structure of the message.</value>
        <remarks>
          <para>The body will be one of <see cref="T:MailKit.BodyPartText" />,
            <see cref="T:MailKit.BodyPartMessage" />, <see cref="T:MailKit.BodyPartBasic" />,
            or <see cref="T:MailKit.BodyPartMultipart" />.</para>
          <para>This property will only be set if the
            <see cref="F:MailKit.MessageSummaryItems.Body" /> flag is passed to
            <see cref="M:MailKit.IMailFolder.Fetch(System.Collections.Generic.IList{MailKit.UniqueId},MailKit.MessageSummaryItems,System.Threading.CancellationToken)" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Envelope">
      <MemberSignature Language="C#" Value="public MailKit.Envelope Envelope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MailKit.Envelope Envelope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.Envelope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the envelope of the message, if available.
            </summary>
        <value>The envelope of the message.</value>
        <remarks>
          <para>The envelope of a message contains information such as the
            date the message was sent, the subject of the message,
            the sender of the message, who the message was sent to,
            which message(s) the message may be in reply to,
            and the message id.</para>
          <para>This property will only be set if the
            <see cref="F:MailKit.MessageSummaryItems.Envelope" /> flag is passed to
            <see cref="M:MailKit.IMailFolder.Fetch(System.Collections.Generic.IList{MailKit.UniqueId},MailKit.MessageSummaryItems,System.Threading.CancellationToken)" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public Nullable&lt;MailKit.MessageFlags&gt; Flags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype MailKit.MessageFlags&gt; Flags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;MailKit.MessageFlags&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the message flags, if available.
            </summary>
        <value>The message flags.</value>
        <remarks>
          <para>Gets the message flags, if available.</para>
          <para>This property will only be set if the
            <see cref="F:MailKit.MessageSummaryItems.Flags" /> flag is passed to
            <see cref="M:MailKit.IMailFolder.Fetch(System.Collections.Generic.IList{MailKit.UniqueId},MailKit.MessageSummaryItems,System.Threading.CancellationToken)" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GMailLabels">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; GMailLabels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; GMailLabels" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the list of GMail labels, if available.
            </summary>
        <value>The GMail labels.</value>
        <remarks>
          <para>Gets the list of GMail labels, if available.</para>
          <para>This property will only be set if the
            <see cref="F:MailKit.MessageSummaryItems.GMailLabels" /> flag is passed to
            <see cref="M:MailKit.IMailFolder.Fetch(System.Collections.Generic.IList{MailKit.UniqueId},MailKit.MessageSummaryItems,System.Threading.CancellationToken)" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GMailMessageId">
      <MemberSignature Language="C#" Value="public Nullable&lt;ulong&gt; GMailMessageId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;unsigned int64&gt; GMailMessageId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the GMail message identifier, if available.
            </summary>
        <value>The GMail message identifier.</value>
        <remarks>
          <para>Gets the GMail message identifier, if available.</para>
          <para>This property will only be set if the
            <see cref="F:MailKit.MessageSummaryItems.GMailMessageId" /> flag is passed to
            <see cref="M:MailKit.IMailFolder.Fetch(System.Collections.Generic.IList{MailKit.UniqueId},MailKit.MessageSummaryItems,System.Threading.CancellationToken)" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GMailThreadId">
      <MemberSignature Language="C#" Value="public Nullable&lt;ulong&gt; GMailThreadId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;unsigned int64&gt; GMailThreadId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the GMail thread identifier, if available.
            </summary>
        <value>The GMail thread identifier.</value>
        <remarks>
          <para>Gets the GMail thread identifier, if available.</para>
          <para>This property will only be set if the
            <see cref="F:MailKit.MessageSummaryItems.GMailThreadId" /> flag is passed to
            <see cref="M:MailKit.IMailFolder.Fetch(System.Collections.Generic.IList{MailKit.UniqueId},MailKit.MessageSummaryItems,System.Threading.CancellationToken)" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the index of the message.
            </summary>
        <value>The index of the message.</value>
        <remarks>
            Gets the index of the message.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalDate">
      <MemberSignature Language="C#" Value="public Nullable&lt;DateTimeOffset&gt; InternalDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; InternalDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTimeOffset&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the internal date of the message (i.e. the "received" date), if available.
            </summary>
        <value>The internal date of the message.</value>
        <remarks>
          <para>Gets the internal date of the message (i.e. the "received" date), if available.</para>
          <para>This property will only be set if the
            <see cref="F:MailKit.MessageSummaryItems.InternalDate" /> flag is passed to
            <see cref="M:MailKit.IMailFolder.Fetch(System.Collections.Generic.IList{MailKit.UniqueId},MailKit.MessageSummaryItems,System.Threading.CancellationToken)" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MailKit.ISortable.CanSort">
      <MemberSignature Language="C#" Value="bool MailKit.ISortable.CanSort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MailKit.ISortable.CanSort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets whether or not the messages can be sorted.
            </summary>
        <value>
          <c>true</c> if the messages can be sorted; otherwise, <c>false</c>.</value>
        <remarks>
            Gets whether or not the messages can be sorted.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MailKit.ISortable.SortableCc">
      <MemberSignature Language="C#" Value="string MailKit.ISortable.SortableCc { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MailKit.ISortable.SortableCc" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the Cc header value.
            </summary>
        <value>The Cc header value.</value>
        <remarks>
            Gets the Cc header value.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MailKit.ISortable.SortableDate">
      <MemberSignature Language="C#" Value="DateTimeOffset MailKit.ISortable.SortableDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTimeOffset MailKit.ISortable.SortableDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the Date header value.
            </summary>
        <value>The date.</value>
        <remarks>
            Gets the Date header value.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MailKit.ISortable.SortableFrom">
      <MemberSignature Language="C#" Value="string MailKit.ISortable.SortableFrom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MailKit.ISortable.SortableFrom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the From header value.
            </summary>
        <value>The From header value.</value>
        <remarks>
            Gets the From header value.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MailKit.ISortable.SortableIndex">
      <MemberSignature Language="C#" Value="int MailKit.ISortable.SortableIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MailKit.ISortable.SortableIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the message index in the folder it belongs to.
            </summary>
        <value>The index.</value>
        <remarks>
            Gets the message index in the folder it belongs to.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MailKit.ISortable.SortableSize">
      <MemberSignature Language="C#" Value="uint MailKit.ISortable.SortableSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 MailKit.ISortable.SortableSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the size of the message, in bytes.
            </summary>
        <value>The size of the message, in bytes.</value>
        <remarks>
            Gets the size of the message, in bytes.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MailKit.ISortable.SortableSubject">
      <MemberSignature Language="C#" Value="string MailKit.ISortable.SortableSubject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MailKit.ISortable.SortableSubject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the Subject header value.
            </summary>
        <value>The Subject header value.</value>
        <remarks>
            Gets the Subject header value.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MailKit.ISortable.SortableTo">
      <MemberSignature Language="C#" Value="string MailKit.ISortable.SortableTo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MailKit.ISortable.SortableTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the To header value.
            </summary>
        <value>The To header value.</value>
        <remarks>
            Gets the To header value.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MailKit.IThreadable.CanThread">
      <MemberSignature Language="C#" Value="bool MailKit.IThreadable.CanThread { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MailKit.IThreadable.CanThread" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets whether the message can be threaded.
            </summary>
        <value>
          <c>true</c> if the messages can be threaded; otherwise, <c>false</c>.</value>
        <remarks>
            Gets whether the message can be threaded.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MailKit.IThreadable.IsThreadableReply">
      <MemberSignature Language="C#" Value="bool MailKit.IThreadable.IsThreadableReply { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MailKit.IThreadable.IsThreadableReply" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether this instance is a reply.
            </summary>
        <value>
          <c>true</c> if this instance is a reply; otherwise, <c>false</c>.</value>
        <remarks>
            This value should be based on whether the message subject contained any "Re:" or "Fwd:" prefixes.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MailKit.IThreadable.ThreadableMessageId">
      <MemberSignature Language="C#" Value="string MailKit.IThreadable.ThreadableMessageId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MailKit.IThreadable.ThreadableMessageId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the threadable message identifier.
            </summary>
        <value>The threadable message identifier.</value>
        <remarks>
            This value should be the canonicalized Message-Id header value
            without the angle brackets.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MailKit.IThreadable.ThreadableReferences">
      <MemberSignature Language="C#" Value="MimeKit.MessageIdList MailKit.IThreadable.ThreadableReferences { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MimeKit.MessageIdList MailKit.IThreadable.ThreadableReferences" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MessageIdList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the threadable references.
            </summary>
        <value>The threadable references.</value>
        <remarks>
            This value should be the list of canonicalized Message-Ids
            found in the In-Reply-To and References headers.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MailKit.IThreadable.ThreadableSubject">
      <MemberSignature Language="C#" Value="string MailKit.IThreadable.ThreadableSubject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MailKit.IThreadable.ThreadableSubject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the threadable subject.
            </summary>
        <value>The threadable subject.</value>
        <remarks>
            A normalized Subject header value where prefixes such as
            "Re:", "Re[#]:", etc have been pruned.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MailKit.IThreadable.ThreadableUniqueId">
      <MemberSignature Language="C#" Value="MailKit.UniqueId MailKit.IThreadable.ThreadableUniqueId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MailKit.UniqueId MailKit.IThreadable.ThreadableUniqueId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.UniqueId</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the unique identifier.
            </summary>
        <value>The unique identifier.</value>
        <remarks>
            Gets the unique identifier.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageSize">
      <MemberSignature Language="C#" Value="public Nullable&lt;uint&gt; MessageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;unsigned int32&gt; MessageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the size of the message, in bytes, if available.
            </summary>
        <value>The size of the message.</value>
        <remarks>
          <para>Gets the size of the message, in bytes, if available.</para>
          <para>This property will only be set if the
            <see cref="F:MailKit.MessageSummaryItems.MessageSize" /> flag is passed to
            <see cref="M:MailKit.IMailFolder.Fetch(System.Collections.Generic.IList{MailKit.UniqueId},MailKit.MessageSummaryItems,System.Threading.CancellationToken)" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModSeq">
      <MemberSignature Language="C#" Value="public Nullable&lt;ulong&gt; ModSeq { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;unsigned int64&gt; ModSeq" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the mod-sequence value for the message, if available.
            </summary>
        <value>The mod-sequence value.</value>
        <remarks>
          <para>Gets the mod-sequence value for the message, if available.</para>
          <para>This property will only be set if the
            <see cref="F:MailKit.MessageSummaryItems.ModSeq" /> flag is passed to
            <see cref="M:MailKit.IMailFolder.Fetch(System.Collections.Generic.IList{MailKit.UniqueId},MailKit.MessageSummaryItems,System.Threading.CancellationToken)" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="References">
      <MemberSignature Language="C#" Value="public MimeKit.MessageIdList References { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MimeKit.MessageIdList References" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MessageIdList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the message-ids that the message references, if available.
            </summary>
        <value>The references.</value>
        <remarks>
          <para>Gets the message-ids that the message references, if available.</para>
          <para>This property will only be set if the
            <see cref="F:MailKit.MessageSummaryItems.References" /> flag is passed to
            <see cref="M:MailKit.IMailFolder.Fetch(System.Collections.Generic.IList{MailKit.UniqueId},MailKit.MessageSummaryItems,System.Threading.CancellationToken)" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UniqueId">
      <MemberSignature Language="C#" Value="public Nullable&lt;MailKit.UniqueId&gt; UniqueId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype MailKit.UniqueId&gt; UniqueId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the unique ID of the message, if available.
            </summary>
        <value>The uid of the message.</value>
        <remarks>
          <para>Gets the unique ID of the message, if available.</para>
          <para>This property will only be set if the
            <see cref="F:MailKit.MessageSummaryItems.UniqueId" /> flag is passed to
            <see cref="M:MailKit.IMailFolder.Fetch(System.Collections.Generic.IList{MailKit.UniqueId},MailKit.MessageSummaryItems,System.Threading.CancellationToken)" />.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
