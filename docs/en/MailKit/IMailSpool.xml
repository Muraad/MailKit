<Type Name="IMailSpool" FullName="MailKit.IMailSpool">
  <TypeSignature Language="C#" Value="public interface IMailSpool : IDisposable, MailKit.IMailService, System.Collections.Generic.IEnumerable&lt;MimeKit.MimeMessage&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMailSpool implements class MailKit.IMailService, class System.Collections.Generic.IEnumerable`1&lt;class MimeKit.MimeMessage&gt;, class System.Collections.IEnumerable, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>MailKit</AssemblyName>
    <AssemblyVersion>0.92.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>MailKit.IMailService</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;MimeKit.MimeMessage&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            An interface for retreiving messages from a spool.
            </summary>
    <remarks>
            An interface for retreiving messages from a spool.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="DeleteAllMessages">
      <MemberSignature Language="C#" Value="public void DeleteAllMessages (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteAllMessages(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Mark all messages for deletion.
            </summary>
        <remarks>
            Messages marked for deletion are not actually deleted until the session
            is cleanly disconnected
            (see <see cref="M:MailKit.IMailService.Disconnect(System.Boolean,System.Threading.CancellationToken)" />).
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAllMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DeleteAllMessagesAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteAllMessagesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously mark all messages for deletion.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Messages marked for deletion are not actually deleted until the session
            is cleanly disconnected
            (see <see cref="M:MailKit.IMailService.Disconnect(System.Boolean,System.Threading.CancellationToken)" />).
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteMessage">
      <MemberSignature Language="C#" Value="public void DeleteMessage (int index, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteMessage(int32 index, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Mark the specified message for deletion.
            </summary>
        <remarks>
            Messages marked for deletion are not actually deleted until the session
            is cleanly disconnected
            (see <see cref="M:MailKit.IMailService.Disconnect(System.Boolean,System.Threading.CancellationToken)" />).
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteMessage">
      <MemberSignature Language="C#" Value="public void DeleteMessage (string uid, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteMessage(string uid, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Mark the specified message for deletion.
            </summary>
        <remarks>
            Messages marked for deletion are not actually deleted until the session
            is cleanly disconnected
            (see <see cref="M:MailKit.IMailService.Disconnect(System.Boolean,System.Threading.CancellationToken)" />).
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteMessageAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DeleteMessageAsync (int index, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteMessageAsync(int32 index, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously mark the specified message for deletion.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Messages marked for deletion are not actually deleted until the session
            is cleanly disconnected
            (see <see cref="M:MailKit.IMailService.Disconnect(System.Boolean,System.Threading.CancellationToken)" />).
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteMessageAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DeleteMessageAsync (string uid, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteMessageAsync(string uid, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously mark the specified message for deletion.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Messages marked for deletion are not actually deleted until the session
            is cleanly disconnected
            (see <see cref="M:MailKit.IMailService.Disconnect(System.Boolean,System.Threading.CancellationToken)" />).
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteMessages">
      <MemberSignature Language="C#" Value="public void DeleteMessages (System.Collections.Generic.IList&lt;int&gt; indexes, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteMessages(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Mark the specified messages for deletion.
            </summary>
        <remarks>
            Messages marked for deletion are not actually deleted until the session
            is cleanly disconnected
            (see <see cref="M:MailKit.IMailService.Disconnect(System.Boolean,System.Threading.CancellationToken)" />).
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteMessages">
      <MemberSignature Language="C#" Value="public void DeleteMessages (System.Collections.Generic.IList&lt;string&gt; uids, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteMessages(class System.Collections.Generic.IList`1&lt;string&gt; uids, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Mark the specified messages for deletion.
            </summary>
        <remarks>
            Messages marked for deletion are not actually deleted until the session
            is cleanly disconnected
            (see <see cref="M:MailKit.IMailService.Disconnect(System.Boolean,System.Threading.CancellationToken)" />).
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteMessages">
      <MemberSignature Language="C#" Value="public void DeleteMessages (int startIndex, int count, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteMessages(int32 startIndex, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="startIndex">The index of the first message to mark for deletion.</param>
        <param name="count">The number of messages to mark for deletion.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Mark the specified range of messages for deletion.
            </summary>
        <remarks>
            Messages marked for deletion are not actually deleted until the session
            is cleanly disconnected
            (see <see cref="M:MailKit.IMailService.Disconnect(System.Boolean,System.Threading.CancellationToken)" />).
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DeleteMessagesAsync (System.Collections.Generic.IList&lt;int&gt; indexes, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteMessagesAsync(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously mark the specified messages for deletion.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Messages marked for deletion are not actually deleted until the session
            is cleanly disconnected
            (see <see cref="M:MailKit.IMailService.Disconnect(System.Boolean,System.Threading.CancellationToken)" />).
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DeleteMessagesAsync (System.Collections.Generic.IList&lt;string&gt; uids, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteMessagesAsync(class System.Collections.Generic.IList`1&lt;string&gt; uids, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously mark the specified messages for deletion.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Messages marked for deletion are not actually deleted until the session
            is cleanly disconnected
            (see <see cref="M:MailKit.IMailService.Disconnect(System.Boolean,System.Threading.CancellationToken)" />).
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DeleteMessagesAsync (int startIndex, int count, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteMessagesAsync(int32 startIndex, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="startIndex">The index of the first message to mark for deletion.</param>
        <param name="count">The number of messages to mark for deletion.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously mark the specified range of messages for deletion.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Messages marked for deletion are not actually deleted until the session
            is cleanly disconnected
            (see <see cref="M:MailKit.IMailService.Disconnect(System.Boolean,System.Threading.CancellationToken)" />).
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMessage">
      <MemberSignature Language="C#" Value="public MimeKit.MimeMessage GetMessage (int index, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MimeKit.MimeMessage GetMessage(int32 index, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Get the message at the specified index.
            </summary>
        <returns>The message.</returns>
        <remarks>
            Gets the message at the specified index.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMessage">
      <MemberSignature Language="C#" Value="public MimeKit.MimeMessage GetMessage (string uid, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MimeKit.MimeMessage GetMessage(string uid, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Get the message with the specified UID.
            </summary>
        <returns>The message.</returns>
        <remarks>
            Gets the message with the specified UID.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMessageAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;MimeKit.MimeMessage&gt; GetMessageAsync (int index, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class MimeKit.MimeMessage&gt; GetMessageAsync(int32 index, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;MimeKit.MimeMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously get the message at the specified index.
            </summary>
        <returns>The message.</returns>
        <remarks>
            Asynchronously gets the message at the specified index.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMessageAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;MimeKit.MimeMessage&gt; GetMessageAsync (string uid, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class MimeKit.MimeMessage&gt; GetMessageAsync(string uid, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;MimeKit.MimeMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously get the message with the specified UID.
            </summary>
        <returns>The message.</returns>
        <remarks>
            Asynchronously gets the message with the specified UID.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMessageCount">
      <MemberSignature Language="C#" Value="public int GetMessageCount (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetMessageCount(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Get the number of messages available in the message spool.
            </summary>
        <returns>The number of available messages.</returns>
        <remarks>
            Gets the number of messages available in the message spool.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMessageCountAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; GetMessageCountAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; GetMessageCountAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously get the number of messages available in the message spool.
            </summary>
        <returns>The number of available messages.</returns>
        <remarks>
            Asynchronously gets the number of messages available in the message spool.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMessageHeaders">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;MimeKit.HeaderList&gt; GetMessageHeaders (System.Collections.Generic.IList&lt;int&gt; indexes, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class MimeKit.HeaderList&gt; GetMessageHeaders(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MimeKit.HeaderList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Get the headers for the specified messages.
            </summary>
        <returns>The headers for the specified messages.</returns>
        <remarks>
            Gets the headers for the specified messages.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMessageHeaders">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;MimeKit.HeaderList&gt; GetMessageHeaders (System.Collections.Generic.IList&lt;string&gt; uids, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class MimeKit.HeaderList&gt; GetMessageHeaders(class System.Collections.Generic.IList`1&lt;string&gt; uids, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MimeKit.HeaderList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Get the headers for the specified messages.
            </summary>
        <returns>The headers for the specified messages.</returns>
        <remarks>
            Gets the headers for the specified messages.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMessageHeaders">
      <MemberSignature Language="C#" Value="public MimeKit.HeaderList GetMessageHeaders (int index, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MimeKit.HeaderList GetMessageHeaders(int32 index, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.HeaderList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Get the headers for the specified message.
            </summary>
        <returns>The message headers.</returns>
        <remarks>
            Gets the headers for the specified message.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMessageHeaders">
      <MemberSignature Language="C#" Value="public MimeKit.HeaderList GetMessageHeaders (string uid, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MimeKit.HeaderList GetMessageHeaders(string uid, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.HeaderList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Get the headers for the specified message.
            </summary>
        <returns>The message headers.</returns>
        <remarks>
            Gets the headers for the specified message.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMessageHeaders">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;MimeKit.HeaderList&gt; GetMessageHeaders (int startIndex, int count, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class MimeKit.HeaderList&gt; GetMessageHeaders(int32 startIndex, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MimeKit.HeaderList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="startIndex">The index of the first message to get.</param>
        <param name="count">The number of messages to get.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Get the headers of the messages within the specified range.
            </summary>
        <returns>The headers of the messages within the specified range.</returns>
        <remarks>
            Gets the headers of the messages within the specified range.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMessageHeadersAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MimeKit.HeaderList&gt;&gt; GetMessageHeadersAsync (System.Collections.Generic.IList&lt;int&gt; indexes, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class MimeKit.HeaderList&gt;&gt; GetMessageHeadersAsync(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MimeKit.HeaderList&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously get the headers for the specified messages.
            </summary>
        <returns>The headers for the specified messages.</returns>
        <remarks>
            Asynchronously gets the headers for the specified messages.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMessageHeadersAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MimeKit.HeaderList&gt;&gt; GetMessageHeadersAsync (System.Collections.Generic.IList&lt;string&gt; uids, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class MimeKit.HeaderList&gt;&gt; GetMessageHeadersAsync(class System.Collections.Generic.IList`1&lt;string&gt; uids, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MimeKit.HeaderList&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the message.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously get the headers for the specified messages.
            </summary>
        <returns>The headers for the specified messages.</returns>
        <remarks>
            Asynchronously gets the headers for the specified messages.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMessageHeadersAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;MimeKit.HeaderList&gt; GetMessageHeadersAsync (int index, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class MimeKit.HeaderList&gt; GetMessageHeadersAsync(int32 index, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;MimeKit.HeaderList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously get the headers for the specified message.
            </summary>
        <returns>The message headers.</returns>
        <remarks>
            Asynchronously gets the headers for the specified message.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMessageHeadersAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;MimeKit.HeaderList&gt; GetMessageHeadersAsync (string uid, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class MimeKit.HeaderList&gt; GetMessageHeadersAsync(string uid, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;MimeKit.HeaderList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously get the headers for the specified message.
            </summary>
        <returns>The message headers.</returns>
        <remarks>
            Asynchronously gets the headers for the specified message.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMessageHeadersAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MimeKit.HeaderList&gt;&gt; GetMessageHeadersAsync (int startIndex, int count, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class MimeKit.HeaderList&gt;&gt; GetMessageHeadersAsync(int32 startIndex, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MimeKit.HeaderList&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="startIndex">The index of the first message to get.</param>
        <param name="count">The number of messages to get.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Get the headers of the messages within the specified range.
            </summary>
        <returns>The headers of the messages within the specified range.</returns>
        <remarks>
            Gets the headers of the messages within the specified range.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMessages">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;MimeKit.MimeMessage&gt; GetMessages (System.Collections.Generic.IList&lt;int&gt; indexes, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class MimeKit.MimeMessage&gt; GetMessages(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MimeKit.MimeMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Get the messages at the specified indexes.
            </summary>
        <returns>The messages.</returns>
        <remarks>
            Gets the messages at the specified indexes.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMessages">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;MimeKit.MimeMessage&gt; GetMessages (System.Collections.Generic.IList&lt;string&gt; uids, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class MimeKit.MimeMessage&gt; GetMessages(class System.Collections.Generic.IList`1&lt;string&gt; uids, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MimeKit.MimeMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UID of the messages.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Get the messages with the specified UIDs.
            </summary>
        <returns>The messages.</returns>
        <remarks>
            Gets the messages with the specified UIDs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMessages">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;MimeKit.MimeMessage&gt; GetMessages (int startIndex, int count, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class MimeKit.MimeMessage&gt; GetMessages(int32 startIndex, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MimeKit.MimeMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="startIndex">The index of the first message to get.</param>
        <param name="count">The number of messages to get.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Get the messages within the specified range.
            </summary>
        <returns>The messages.</returns>
        <remarks>
            Gets the messages within the specified range.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MimeKit.MimeMessage&gt;&gt; GetMessagesAsync (System.Collections.Generic.IList&lt;int&gt; indexes, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class MimeKit.MimeMessage&gt;&gt; GetMessagesAsync(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MimeKit.MimeMessage&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously get the messages at the specified indexes.
            </summary>
        <returns>The messages.</returns>
        <remarks>
            Asynchronously gets the messages at the specified indexes.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MimeKit.MimeMessage&gt;&gt; GetMessagesAsync (System.Collections.Generic.IList&lt;string&gt; uids, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class MimeKit.MimeMessage&gt;&gt; GetMessagesAsync(class System.Collections.Generic.IList`1&lt;string&gt; uids, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MimeKit.MimeMessage&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously get the messages with the specified UIDs.
            </summary>
        <returns>The messages.</returns>
        <remarks>
            Asynchronously gets the messages with the specified UIDs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MimeKit.MimeMessage&gt;&gt; GetMessagesAsync (int startIndex, int count, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class MimeKit.MimeMessage&gt;&gt; GetMessagesAsync(int32 startIndex, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MimeKit.MimeMessage&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="startIndex">The index of the first message to get.</param>
        <param name="count">The number of messages to get.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously get the messages within the specified range.
            </summary>
        <returns>The messages.</returns>
        <remarks>
            Asynchronously gets the messages within the specified range.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMessageSize">
      <MemberSignature Language="C#" Value="public int GetMessageSize (int index, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetMessageSize(int32 index, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Get the size of the specified message, in bytes.
            </summary>
        <returns>The message size, in bytes.</returns>
        <remarks>
            Gets the size of the specified message, in bytes.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMessageSize">
      <MemberSignature Language="C#" Value="public int GetMessageSize (string uid, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetMessageSize(string uid, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Get the size of the specified message, in bytes.
            </summary>
        <returns>The message size, in bytes.</returns>
        <remarks>
            Gets the size of the specified message, in bytes.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMessageSizeAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; GetMessageSizeAsync (int index, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; GetMessageSizeAsync(int32 index, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously get the size of the specified message, in bytes.
            </summary>
        <returns>The message size, in bytes.</returns>
        <remarks>
            Asynchronously gets the size of the specified message, in bytes.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMessageSizeAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; GetMessageSizeAsync (string uid, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; GetMessageSizeAsync(string uid, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously get the size of the specified message, in bytes.
            </summary>
        <returns>The message size, in bytes.</returns>
        <remarks>
            Asynchronously gets the size of the specified message, in bytes.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMessageSizes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;int&gt; GetMessageSizes (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;int32&gt; GetMessageSizes(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Get the sizes for all available messages, in bytes.
            </summary>
        <returns>The message sizes, in bytes.</returns>
        <remarks>
            Gets the sizes for all available messages, in bytes.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMessageSizesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;int&gt;&gt; GetMessageSizesAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;int32&gt;&gt; GetMessageSizesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;System.Int32&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously get the sizes for all available messages, in bytes.
            </summary>
        <returns>The message sizes, in bytes.</returns>
        <remarks>
            Asynchronously gets the sizes for all available messages, in bytes.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMessageUid">
      <MemberSignature Language="C#" Value="public string GetMessageUid (int index, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetMessageUid(int32 index, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The message index.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Get the UID of the message at the specified index.
            </summary>
        <returns>The message UID.</returns>
        <remarks>
            Not all servers support UIDs, so you should first check
            the <see cref="P:MailKit.IMailSpool.SupportsUids" /> property.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMessageUidAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; GetMessageUidAsync (int index, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; GetMessageUidAsync(int32 index, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The message index.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously get the UID of the message at the specified index.
            </summary>
        <returns>The message UID.</returns>
        <remarks>
            Not all servers support UIDs, so you should first check
            the <see cref="P:MailKit.IMailSpool.SupportsUids" /> property.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMessageUids">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; GetMessageUids (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetMessageUids(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Get the full list of available message UIDs.
            </summary>
        <returns>The message UIDs.</returns>
        <remarks>
            Not all servers support UIDs, so you should first check
            the <see cref="P:MailKit.IMailSpool.SupportsUids" /> property.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMessageUidsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;string&gt;&gt; GetMessageUidsAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;string&gt;&gt; GetMessageUidsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously get the full list of available message UIDs.
            </summary>
        <returns>The message UIDs.</returns>
        <remarks>
            Not all servers support UIDs, so you should first check
            the <see cref="P:MailKit.IMailSpool.SupportsUids" /> property.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Reset the state of all messages marked for deletion.
            </summary>
        <remarks>
            Messages marked for deletion are not actually deleted until the session
            is cleanly disconnected
            (see <see cref="M:MailKit.IMailService.Disconnect(System.Boolean,System.Threading.CancellationToken)" />).
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ResetAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ResetAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously reset the state of all messages marked for deletion.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Messages marked for deletion are not actually deleted until the session
            is cleanly disconnected
            (see <see cref="M:MailKit.IMailService.Disconnect(System.Boolean,System.Threading.CancellationToken)" />).
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsUids">
      <MemberSignature Language="C#" Value="public bool SupportsUids { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsUids" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.92.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get whether or not the service supports referencing messages by UIDs.
            </summary>
        <value>
          <c>true</c> if supports uids; otherwise, <c>false</c>.</value>
        <remarks>
          <para>Not all servers support referencing messages by UID, so this property should
            be checked before using <see cref="M:MailKit.IMailSpool.GetMessageUid(System.Int32,System.Threading.CancellationToken)" />
            and <see cref="M:MailKit.IMailSpool.GetMessageUids(System.Threading.CancellationToken)" />.</para>
          <para>If the server does not support UIDs, then all methods that take UID arguments
            along with <see cref="M:MailKit.IMailSpool.GetMessageUid(System.Int32,System.Threading.CancellationToken)" /> and
            <see cref="M:MailKit.IMailSpool.GetMessageUids(System.Threading.CancellationToken)" /> will fail.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
