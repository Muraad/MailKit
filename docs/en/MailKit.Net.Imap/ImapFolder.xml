<Type Name="ImapFolder" FullName="MailKit.Net.Imap.ImapFolder">
  <TypeSignature Language="C#" Value="public class ImapFolder : MailKit.MailFolder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImapFolder extends MailKit.MailFolder" />
  <AssemblyInfo>
    <AssemblyName>MailKit</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MailKit.MailFolder</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Docs>
    <summary>
            An IMAP folder.
            </summary>
    <remarks>
            An IMAP folder.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddFlags">
      <MemberSignature Language="C#" Value="public override void AddFlags (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddFlags(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="flags">The message flags to add.</param>
        <param name="userFlags">A set of user-defined flags to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Adds a set of flags to the specified messages.
            </summary>
        <remarks>
            Adds a set of flags to the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddFlags">
      <MemberSignature Language="C#" Value="public override void AddFlags (System.Collections.Generic.IList&lt;int&gt; indexes, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddFlags(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="flags">The message flags to add.</param>
        <param name="userFlags">A set of user-defined flags to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Adds a set of flags to the specified messages.
            </summary>
        <remarks>
            Adds a set of flags to the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indexes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddFlags">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; AddFlags (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, ulong modseq, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; AddFlags(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, unsigned int64 modseq, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="flags">The message flags to add.</param>
        <param name="userFlags">A set of user-defined flags to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Adds a set of flags to the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The unique IDs of the messages that were not updated.</returns>
        <remarks>
            Adds a set of flags to the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.Net.Imap.ImapFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddFlags">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;int&gt; AddFlags (System.Collections.Generic.IList&lt;int&gt; indexes, ulong modseq, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;int32&gt; AddFlags(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, unsigned int64 modseq, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="flags">The message flags to add.</param>
        <param name="userFlags">A set of user-defined flags to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Adds a set of flags to the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The indexes of the messages that were not updated.</returns>
        <remarks>
            Adds a set of flags to the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indexes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.Net.Imap.ImapFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddLabels">
      <MemberSignature Language="C#" Value="public override void AddLabels (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddLabels(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="labels">The labels to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Add a set of labels to the specified messages.
            </summary>
        <remarks>
            Adds a set of labels to the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="labels" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>No labels were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddLabels">
      <MemberSignature Language="C#" Value="public override void AddLabels (System.Collections.Generic.IList&lt;int&gt; indexes, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddLabels(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="labels">The labels to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Add a set of labels to the specified messages.
            </summary>
        <remarks>
            Adds a set of labels to the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="indexes" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="labels" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>No labels were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddLabels">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; AddLabels (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, ulong modseq, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; AddLabels(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, unsigned int64 modseq, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="labels">The labels to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Add a set of labels to the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The unique IDs of the messages that were not updated.</returns>
        <remarks>
            Adds a set of labels to the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="labels" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>No labels were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddLabels">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;int&gt; AddLabels (System.Collections.Generic.IList&lt;int&gt; indexes, ulong modseq, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;int32&gt; AddLabels(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, unsigned int64 modseq, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="labels">The labels to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Add a set of labels to the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The indexes of the messages that were not updated.</returns>
        <remarks>
            Adds a set of labels to the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="indexes" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="labels" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>No labels were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public override Nullable&lt;MailKit.UniqueId&gt; Append (MimeKit.FormatOptions options, MimeKit.MimeMessage message, MailKit.MessageFlags flags = MailKit.MessageFlags.None, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Nullable`1&lt;valuetype MailKit.UniqueId&gt; Append(class MimeKit.FormatOptions options, class MimeKit.MimeMessage message, valuetype MailKit.MessageFlags flags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="MimeKit.FormatOptions" />
        <Parameter Name="message" Type="MimeKit.MimeMessage" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">The formatting options.</param>
        <param name="message">The message.</param>
        <param name="flags">The message flags.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Appends the specified message to the folder.
            </summary>
        <returns>The UID of the appended message, if available; otherwise, <c>null</c>.</returns>
        <remarks>
            Appends the specified message to the folder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="options" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="message" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is either not connected or not authenticated.</para>
          <para>-or-</para>
          <para>Internationalized formatting was requested but has not been enabled.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.NotSupportedException">
            Internationalized formatting was requested but is not supported by the server.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; Append (MimeKit.FormatOptions options, System.Collections.Generic.IList&lt;MimeKit.MimeMessage&gt; messages, System.Collections.Generic.IList&lt;MailKit.MessageFlags&gt; flags, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; Append(class MimeKit.FormatOptions options, class System.Collections.Generic.IList`1&lt;class MimeKit.MimeMessage&gt; messages, class System.Collections.Generic.IList`1&lt;valuetype MailKit.MessageFlags&gt; flags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="MimeKit.FormatOptions" />
        <Parameter Name="messages" Type="System.Collections.Generic.IList&lt;MimeKit.MimeMessage&gt;" />
        <Parameter Name="flags" Type="System.Collections.Generic.IList&lt;MailKit.MessageFlags&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">The formatting options.</param>
        <param name="messages">The list of messages to append to the folder.</param>
        <param name="flags">The message flags to use for each message.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Appends the specified messages to the folder.
            </summary>
        <returns>The UIDs of the appended messages, if available; otherwise an empty array.</returns>
        <remarks>
            Appends the specified messages to the folder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="options" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="messages" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="flags" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>One or more of the <paramref name="messages" /> is null.</para>
          <para>-or-</para>
          <para>The number of messages does not match the number of flags.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is either not connected or not authenticated.</para>
          <para>-or-</para>
          <para>Internationalized formatting was requested but has not been enabled.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.NotSupportedException">
            Internationalized formatting was requested but is not supported by the server.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public override Nullable&lt;MailKit.UniqueId&gt; Append (MimeKit.FormatOptions options, MimeKit.MimeMessage message, MailKit.MessageFlags flags, DateTimeOffset date, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Nullable`1&lt;valuetype MailKit.UniqueId&gt; Append(class MimeKit.FormatOptions options, class MimeKit.MimeMessage message, valuetype MailKit.MessageFlags flags, valuetype System.DateTimeOffset date, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="MimeKit.FormatOptions" />
        <Parameter Name="message" Type="MimeKit.MimeMessage" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="date" Type="System.DateTimeOffset" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">The formatting options.</param>
        <param name="message">The message.</param>
        <param name="flags">The message flags.</param>
        <param name="date">The received date of the message.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Appends the specified message to the folder.
            </summary>
        <returns>The UID of the appended message, if available; otherwise, <c>null</c>.</returns>
        <remarks>
            Appends the specified message to the folder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="options" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="message" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is either not connected or not authenticated.</para>
          <para>-or-</para>
          <para>Internationalized formatting was requested but has not been enabled.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.NotSupportedException">
            Internationalized formatting was requested but is not supported by the server.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; Append (MimeKit.FormatOptions options, System.Collections.Generic.IList&lt;MimeKit.MimeMessage&gt; messages, System.Collections.Generic.IList&lt;MailKit.MessageFlags&gt; flags, System.Collections.Generic.IList&lt;DateTimeOffset&gt; dates, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; Append(class MimeKit.FormatOptions options, class System.Collections.Generic.IList`1&lt;class MimeKit.MimeMessage&gt; messages, class System.Collections.Generic.IList`1&lt;valuetype MailKit.MessageFlags&gt; flags, class System.Collections.Generic.IList`1&lt;valuetype System.DateTimeOffset&gt; dates, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="MimeKit.FormatOptions" />
        <Parameter Name="messages" Type="System.Collections.Generic.IList&lt;MimeKit.MimeMessage&gt;" />
        <Parameter Name="flags" Type="System.Collections.Generic.IList&lt;MailKit.MessageFlags&gt;" />
        <Parameter Name="dates" Type="System.Collections.Generic.IList&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">The formatting options.</param>
        <param name="messages">The list of messages to append to the folder.</param>
        <param name="flags">The message flags to use for each of the messages.</param>
        <param name="dates">The received dates to use for each of the messages.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Appends the specified messages to the folder.
            </summary>
        <returns>The UIDs of the appended messages, if available; otherwise an empty array.</returns>
        <remarks>
            Appends the specified messages to the folder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="options" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="messages" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="flags" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="dates" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>One or more of the <paramref name="messages" /> is null.</para>
          <para>-or-</para>
          <para>The number of messages, flags, and dates do not match.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is either not connected or not authenticated.</para>
          <para>-or-</para>
          <para>Internationalized formatting was requested but has not been enabled.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.NotSupportedException">
            Internationalized formatting was requested but is not supported by the server.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Check">
      <MemberSignature Language="C#" Value="public override void Check (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Check(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Forces the server to flush its state for the folder.
            </summary>
        <remarks>
            Forces the server to flush its state for the folder.
            </remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close (bool expunge = false, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close(bool expunge, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expunge" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="expunge">If set to <c>true</c>, expunge.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Closes the folder, optionally expunging the messages marked for deletion.
            </summary>
        <remarks>
            Closes the folder, optionally expunging the messages marked for deletion.
            </remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; CopyTo (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, MailKit.IMailFolder destination, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; CopyTo(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, class MailKit.IMailFolder destination, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="destination" Type="MailKit.IMailFolder" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages to copy.</param>
        <param name="destination">The destination folder.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Copies the specified messages to the destination folder.
            </summary>
        <returns>The UIDs of the messages in the destination folder, if available; otherwise an empty array.</returns>
        <remarks>
            Copies the specified messages to the destination folder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="destination" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>The destination folder does not belong to the <see cref="T:MailKit.Net.Imap.ImapClient" />.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The IMAP server does not support the UIDPLUS extension.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public override void CopyTo (System.Collections.Generic.IList&lt;int&gt; indexes, MailKit.IMailFolder destination, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyTo(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, class MailKit.IMailFolder destination, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="destination" Type="MailKit.IMailFolder" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages to copy.</param>
        <param name="destination">The destination folder.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Copies the specified messages to the destination folder.
            </summary>
        <remarks>
            Copies the specified messages to the destination folder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="indexes" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="destination" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>The destination folder does not belong to the <see cref="T:MailKit.Net.Imap.ImapClient" />.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public override MailKit.IMailFolder Create (string name, bool isMessageFolder, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class MailKit.IMailFolder Create(string name, bool isMessageFolder, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.IMailFolder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="isMessageFolder" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of the folder to create.</param>
        <param name="isMessageFolder">
          <c>true</c> if the folder will be used to contain messages; otherwise <c>false</c>.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Creates a new subfolder with the given name.
            </summary>
        <returns>The created folder.</returns>
        <remarks>
            Creates a new subfolder with the given name.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is empty.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is either not connected or not authenticated.</para>
          <para>-or-</para>
          <para>The <see cref="P:MailKit.MailFolder.DirectorySeparator" /> is nil, and thus child folders cannot be created.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public override void Delete (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Delete(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Deletes the folder on the IMAP server.
            </summary>
        <remarks>
            Deletes the folder on the IMAP server.
            </remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is either not connected or not authenticated.</para>
          <para>-or-</para>
          <para>The folder cannot be deleted (it is either a namespace or the Inbox).</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Expunge">
      <MemberSignature Language="C#" Value="public override void Expunge (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Expunge(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Expunges the folder, permanently removing all messages marked for deletion.
            </summary>
        <remarks>
          <para>Normally, an <see cref="E:MailKit.MailFolder.MessageExpunged" /> event will be emitted
            for each message that is expunged. However, if the IMAP server supports the QRESYNC
            extension and it has been enabled via the
            <see cref="M:MailKit.Net.Imap.ImapClient.EnableQuickResync(System.Threading.CancellationToken)" /> method, then
            the <see cref="E:MailKit.MailFolder.MessagesVanished" /> event will be emitted rather than the
            <see cref="E:MailKit.MailFolder.MessageExpunged" /> event.</para>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Expunge">
      <MemberSignature Language="C#" Value="public override void Expunge (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Expunge(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The message uids.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Expunges the specified uids, permanently removing them from the folder.
            </summary>
        <remarks>
          <para>Normally, an <see cref="E:MailKit.MailFolder.MessageExpunged" /> event will be emitted
            for each message that is expunged. However, if the IMAP server supports the QRESYNC
            extension and it has been enabled via the
            <see cref="M:MailKit.Net.Imap.ImapClient.EnableQuickResync(System.Threading.CancellationToken)" /> method, then
            the <see cref="E:MailKit.MailFolder.MessagesVanished" /> event will be emitted rather than the
            <see cref="E:MailKit.MailFolder.MessageExpunged" /> event.</para>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
        <exception cref="T:System.NotSupportedException">
            The IMAP server does not support the UIDPLUS extension.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Fetch">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt; Fetch (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, MailKit.MessageSummaryItems items, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class MailKit.IMessageSummary&gt; Fetch(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, valuetype MailKit.MessageSummaryItems items, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Fetches the message summaries for the specified message UIDs.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>
            Fetches the message summaries for the specified message UIDs.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="items" /> is empty.
            </exception>
        <exception cref="T:System.ArgumentException">
            One or more of the <paramref name="uids" /> is invalid.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Fetch">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt; Fetch (System.Collections.Generic.IList&lt;int&gt; indexes, MailKit.MessageSummaryItems items, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class MailKit.IMessageSummary&gt; Fetch(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, valuetype MailKit.MessageSummaryItems items, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Fetches the message summaries for the specified message indexes.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>
            Fetches the message summaries for the specified message indexes.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indexes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="items" /> is empty.
            </exception>
        <exception cref="T:System.ArgumentException">
            One or more of the <paramref name="indexes" /> is invalid.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Fetch">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt; Fetch (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, MailKit.MessageSummaryItems items, System.Collections.Generic.HashSet&lt;MimeKit.HeaderId&gt; fields, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class MailKit.IMessageSummary&gt; Fetch(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, valuetype MailKit.MessageSummaryItems items, class System.Collections.Generic.HashSet`1&lt;valuetype MimeKit.HeaderId&gt; fields, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="fields" Type="System.Collections.Generic.HashSet&lt;MimeKit.HeaderId&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="fields">The desired header fields.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Fetches the message summaries for the specified message UIDs.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>
            Fetches the message summaries for the specified message UIDs.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="fields" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>
            <paramref name="fields" /> is empty.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Fetch">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt; Fetch (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, MailKit.MessageSummaryItems items, System.Collections.Generic.HashSet&lt;string&gt; fields, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class MailKit.IMessageSummary&gt; Fetch(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, valuetype MailKit.MessageSummaryItems items, class System.Collections.Generic.HashSet`1&lt;string&gt; fields, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="fields" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="fields">The desired header fields.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Fetches the message summaries for the specified message UIDs.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>
            Fetches the message summaries for the specified message UIDs.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="fields" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>
            <paramref name="fields" /> is empty.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Fetch">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt; Fetch (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, ulong modseq, MailKit.MessageSummaryItems items, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class MailKit.IMessageSummary&gt; Fetch(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, unsigned int64 modseq, valuetype MailKit.MessageSummaryItems items, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Fetches the message summaries for the specified message UIDs that have a higher mod-sequence value than the one specified.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>
          <para>If the IMAP server supports the QRESYNC extension and the application has
            enabled this feature via <see cref="M:MailKit.Net.Imap.ImapClient.EnableQuickResync(System.Threading.CancellationToken)" />,
            then this method will emit <see cref="E:MailKit.MailFolder.MessagesVanished" /> events for messages
            that have vanished since the specified mod-sequence value.</para>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="items" /> is empty.
            </exception>
        <exception cref="T:System.ArgumentException">
            One or more of the <paramref name="uids" /> is invalid.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.Net.Imap.ImapFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Fetch">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt; Fetch (System.Collections.Generic.IList&lt;int&gt; indexes, MailKit.MessageSummaryItems items, System.Collections.Generic.HashSet&lt;MimeKit.HeaderId&gt; fields, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class MailKit.IMessageSummary&gt; Fetch(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, valuetype MailKit.MessageSummaryItems items, class System.Collections.Generic.HashSet`1&lt;valuetype MimeKit.HeaderId&gt; fields, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="fields" Type="System.Collections.Generic.HashSet&lt;MimeKit.HeaderId&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="fields">The desired header fields.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Fetches the message summaries for the specified message indexes.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>
            Fetches the message summaries for the specified message indexes.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="indexes" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="fields" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>
            <paramref name="fields" /> is empty.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Fetch">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt; Fetch (System.Collections.Generic.IList&lt;int&gt; indexes, MailKit.MessageSummaryItems items, System.Collections.Generic.HashSet&lt;string&gt; fields, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class MailKit.IMessageSummary&gt; Fetch(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, valuetype MailKit.MessageSummaryItems items, class System.Collections.Generic.HashSet`1&lt;string&gt; fields, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="fields" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="fields">The desired header fields.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Fetches the message summaries for the specified message indexes.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>
            Fetches the message summaries for the specified message indexes.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="indexes" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="fields" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>
            <paramref name="fields" /> is empty.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Fetch">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt; Fetch (System.Collections.Generic.IList&lt;int&gt; indexes, ulong modseq, MailKit.MessageSummaryItems items, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class MailKit.IMessageSummary&gt; Fetch(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, unsigned int64 modseq, valuetype MailKit.MessageSummaryItems items, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Fetches the message summaries for the specified message indexes that have a higher mod-sequence value than the one specified.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>
            Fetches the message summaries for the specified message indexes that have a higher mod-sequence value than the one specified.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indexes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="items" /> is empty.
            </exception>
        <exception cref="T:System.ArgumentException">
            One or more of the <paramref name="indexes" /> is invalid.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.Net.Imap.ImapFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Fetch">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt; Fetch (int min, int max, MailKit.MessageSummaryItems items, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class MailKit.IMessageSummary&gt; Fetch(int32 min, int32 max, valuetype MailKit.MessageSummaryItems items, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="min" Type="System.Int32" />
        <Parameter Name="max" Type="System.Int32" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="min">The minimum index.</param>
        <param name="max">The maximum index, or <c>-1</c> to specify no upper bound.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Fetches the message summaries for the messages between the two indexes, inclusive.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>
            Fetches the message summaries for the messages between the two indexes, inclusive.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <para>
            <paramref name="min" /> is out of range.</para>
          <para>-or-</para>
          <para>
            <paramref name="max" /> is out of range.</para>
          <para>-or-</para>
          <para>
            <paramref name="items" /> is empty.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Fetch">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt; Fetch (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, ulong modseq, MailKit.MessageSummaryItems items, System.Collections.Generic.HashSet&lt;MimeKit.HeaderId&gt; fields, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class MailKit.IMessageSummary&gt; Fetch(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, unsigned int64 modseq, valuetype MailKit.MessageSummaryItems items, class System.Collections.Generic.HashSet`1&lt;valuetype MimeKit.HeaderId&gt; fields, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="fields" Type="System.Collections.Generic.HashSet&lt;MimeKit.HeaderId&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="fields">The desired header fields.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Fetches the message summaries for the specified message UIDs that have a higher mod-sequence value than the one specified.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>
          <para>If the IMAP server supports the QRESYNC extension and the application has
            enabled this feature via <see cref="M:MailKit.Net.Imap.ImapClient.EnableQuickResync(System.Threading.CancellationToken)" />,
            then this method will emit <see cref="E:MailKit.MailFolder.MessagesVanished" /> events for messages
            that have vanished since the specified mod-sequence value.</para>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="fields" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>
            <paramref name="fields" /> is empty.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.Net.Imap.ImapFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Fetch">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt; Fetch (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, ulong modseq, MailKit.MessageSummaryItems items, System.Collections.Generic.HashSet&lt;string&gt; fields, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class MailKit.IMessageSummary&gt; Fetch(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, unsigned int64 modseq, valuetype MailKit.MessageSummaryItems items, class System.Collections.Generic.HashSet`1&lt;string&gt; fields, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="fields" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="fields">The desired header fields.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Fetches the message summaries for the specified message UIDs that have a higher mod-sequence value than the one specified.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>
          <para>If the IMAP server supports the QRESYNC extension and the application has
            enabled this feature via <see cref="M:MailKit.Net.Imap.ImapClient.EnableQuickResync(System.Threading.CancellationToken)" />,
            then this method will emit <see cref="E:MailKit.MailFolder.MessagesVanished" /> events for messages
            that have vanished since the specified mod-sequence value.</para>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="fields" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>
            <paramref name="fields" /> is empty.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.Net.Imap.ImapFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Fetch">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt; Fetch (System.Collections.Generic.IList&lt;int&gt; indexes, ulong modseq, MailKit.MessageSummaryItems items, System.Collections.Generic.HashSet&lt;MimeKit.HeaderId&gt; fields, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class MailKit.IMessageSummary&gt; Fetch(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, unsigned int64 modseq, valuetype MailKit.MessageSummaryItems items, class System.Collections.Generic.HashSet`1&lt;valuetype MimeKit.HeaderId&gt; fields, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="fields" Type="System.Collections.Generic.HashSet&lt;MimeKit.HeaderId&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="fields">The desired header fields.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Fetches the message summaries for the specified message indexes that have a higher mod-sequence value than the one specified.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>
            Fetches the message summaries for the specified message indexes that have a higher mod-sequence value than the one specified.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="indexes" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="fields" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>
            <paramref name="fields" /> is empty.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.Net.Imap.ImapFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Fetch">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt; Fetch (System.Collections.Generic.IList&lt;int&gt; indexes, ulong modseq, MailKit.MessageSummaryItems items, System.Collections.Generic.HashSet&lt;string&gt; fields, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class MailKit.IMessageSummary&gt; Fetch(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, unsigned int64 modseq, valuetype MailKit.MessageSummaryItems items, class System.Collections.Generic.HashSet`1&lt;string&gt; fields, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="fields" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="fields">The desired header fields.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Fetches the message summaries for the specified message indexes that have a higher mod-sequence value than the one specified.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>
            Fetches the message summaries for the specified message indexes that have a higher mod-sequence value than the one specified.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="indexes" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="fields" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>
            <paramref name="fields" /> is empty.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.Net.Imap.ImapFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Fetch">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt; Fetch (int min, int max, MailKit.MessageSummaryItems items, System.Collections.Generic.HashSet&lt;MimeKit.HeaderId&gt; fields, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class MailKit.IMessageSummary&gt; Fetch(int32 min, int32 max, valuetype MailKit.MessageSummaryItems items, class System.Collections.Generic.HashSet`1&lt;valuetype MimeKit.HeaderId&gt; fields, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="min" Type="System.Int32" />
        <Parameter Name="max" Type="System.Int32" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="fields" Type="System.Collections.Generic.HashSet&lt;MimeKit.HeaderId&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="min">The minimum index.</param>
        <param name="max">The maximum index, or <c>-1</c> to specify no upper bound.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="fields">The desired header fields.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Fetches the message summaries for the messages between the two indexes, inclusive.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>
            Fetches the message summaries for the messages between the two indexes, inclusive.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <para>
            <paramref name="min" /> is out of range.</para>
          <para>-or-</para>
          <para>
            <paramref name="max" /> is out of range.</para>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fields" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="fields" /> is empty.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Fetch">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt; Fetch (int min, int max, MailKit.MessageSummaryItems items, System.Collections.Generic.HashSet&lt;string&gt; fields, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class MailKit.IMessageSummary&gt; Fetch(int32 min, int32 max, valuetype MailKit.MessageSummaryItems items, class System.Collections.Generic.HashSet`1&lt;string&gt; fields, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="min" Type="System.Int32" />
        <Parameter Name="max" Type="System.Int32" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="fields" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="min">The minimum index.</param>
        <param name="max">The maximum index, or <c>-1</c> to specify no upper bound.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="fields">The desired header fields.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Fetches the message summaries for the messages between the two indexes, inclusive.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>
            Fetches the message summaries for the messages between the two indexes, inclusive.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <para>
            <paramref name="min" /> is out of range.</para>
          <para>-or-</para>
          <para>
            <paramref name="max" /> is out of range.</para>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fields" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="fields" /> is empty.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Fetch">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt; Fetch (int min, int max, ulong modseq, MailKit.MessageSummaryItems items, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class MailKit.IMessageSummary&gt; Fetch(int32 min, int32 max, unsigned int64 modseq, valuetype MailKit.MessageSummaryItems items, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="min" Type="System.Int32" />
        <Parameter Name="max" Type="System.Int32" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="min">The minimum index.</param>
        <param name="max">The maximum index, or <c>-1</c> to specify no upper bound.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Fetches the message summaries for the messages between the two indexes (inclusive) that have a higher mod-sequence value than the one specified.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>
            Fetches the message summaries for the messages between the two indexes (inclusive) that have a higher mod-sequence value than the one specified.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <para>
            <paramref name="min" /> is out of range.</para>
          <para>-or-</para>
          <para>
            <paramref name="max" /> is out of range.</para>
          <para>-or-</para>
          <para>
            <paramref name="items" /> is empty.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.Net.Imap.ImapFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Fetch">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt; Fetch (int min, int max, ulong modseq, MailKit.MessageSummaryItems items, System.Collections.Generic.HashSet&lt;MimeKit.HeaderId&gt; fields, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class MailKit.IMessageSummary&gt; Fetch(int32 min, int32 max, unsigned int64 modseq, valuetype MailKit.MessageSummaryItems items, class System.Collections.Generic.HashSet`1&lt;valuetype MimeKit.HeaderId&gt; fields, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="min" Type="System.Int32" />
        <Parameter Name="max" Type="System.Int32" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="fields" Type="System.Collections.Generic.HashSet&lt;MimeKit.HeaderId&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="min">The minimum index.</param>
        <param name="max">The maximum index, or <c>-1</c> to specify no upper bound.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="fields">The desired header fields.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Fetches the message summaries for the messages between the two indexes (inclusive) that have a higher mod-sequence value than the one specified.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>
            Fetches the message summaries for the messages between the two indexes (inclusive) that have a higher mod-sequence value than the one specified.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <para>
            <paramref name="min" /> is out of range.</para>
          <para>-or-</para>
          <para>
            <paramref name="max" /> is out of range.</para>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fields" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="fields" /> is empty.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.Net.Imap.ImapFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Fetch">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt; Fetch (int min, int max, ulong modseq, MailKit.MessageSummaryItems items, System.Collections.Generic.HashSet&lt;string&gt; fields, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class MailKit.IMessageSummary&gt; Fetch(int32 min, int32 max, unsigned int64 modseq, valuetype MailKit.MessageSummaryItems items, class System.Collections.Generic.HashSet`1&lt;string&gt; fields, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="min" Type="System.Int32" />
        <Parameter Name="max" Type="System.Int32" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="fields" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="min">The minimum index.</param>
        <param name="max">The maximum index, or <c>-1</c> to specify no upper bound.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="fields">The desired header fields.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Fetches the message summaries for the messages between the two indexes (inclusive) that have a higher mod-sequence value than the one specified.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>
            Fetches the message summaries for the messages between the two indexes (inclusive) that have a higher mod-sequence value than the one specified.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <para>
            <paramref name="min" /> is out of range.</para>
          <para>-or-</para>
          <para>
            <paramref name="max" /> is out of range.</para>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fields" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="fields" /> is empty.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.Net.Imap.ImapFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBodyPart">
      <MemberSignature Language="C#" Value="public override MimeKit.MimeEntity GetBodyPart (MailKit.UniqueId uid, MailKit.BodyPart part, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class MimeKit.MimeEntity GetBodyPart(valuetype MailKit.UniqueId uid, class MailKit.BodyPart part, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="MailKit.UniqueId" />
        <Parameter Name="part" Type="MailKit.BodyPart" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message.</param>
        <param name="part">The body part.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets the specified body part.
            </summary>
        <returns>The body part.</returns>
        <remarks>
            Gets the specified body part.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="part" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="uid" /> is invalid.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBodyPart">
      <MemberSignature Language="C#" Value="public MimeKit.MimeEntity GetBodyPart (MailKit.UniqueId uid, string partSpecifier, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class MimeKit.MimeEntity GetBodyPart(valuetype MailKit.UniqueId uid, string partSpecifier, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="MailKit.UniqueId" />
        <Parameter Name="partSpecifier" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message.</param>
        <param name="partSpecifier">The body part specifier.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets the specified body part.
            </summary>
        <returns>The body part.</returns>
        <remarks>
            Gets the specified body part.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partSpecifier" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="uid" /> is invalid.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBodyPart">
      <MemberSignature Language="C#" Value="public override MimeKit.MimeEntity GetBodyPart (int index, MailKit.BodyPart part, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class MimeKit.MimeEntity GetBodyPart(int32 index, class MailKit.BodyPart part, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="part" Type="MailKit.BodyPart" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="part">The body part.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets the specified body part.
            </summary>
        <returns>The body part.</returns>
        <remarks>
            Gets the specified body part.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="part" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is out of range.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBodyPart">
      <MemberSignature Language="C#" Value="public MimeKit.MimeEntity GetBodyPart (int index, string partSpecifier, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class MimeKit.MimeEntity GetBodyPart(int32 index, string partSpecifier, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="partSpecifier" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="partSpecifier">The body part specifier.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets the specified body part.
            </summary>
        <returns>The body part.</returns>
        <remarks>
            Gets the specified body part.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partSpecifier" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is out of range.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBodyPart">
      <MemberSignature Language="C#" Value="public override MimeKit.MimeEntity GetBodyPart (MailKit.UniqueId uid, MailKit.BodyPart part, bool headersOnly, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class MimeKit.MimeEntity GetBodyPart(valuetype MailKit.UniqueId uid, class MailKit.BodyPart part, bool headersOnly, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="MailKit.UniqueId" />
        <Parameter Name="part" Type="MailKit.BodyPart" />
        <Parameter Name="headersOnly" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message.</param>
        <param name="part">The body part.</param>
        <param name="headersOnly">
          <c>true</c> if only the headers should be downloaded; otherwise, <c>false</c>&gt;</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets the specified body part.
            </summary>
        <returns>The body part.</returns>
        <remarks>
            Gets the specified body part.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="part" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="uid" /> is invalid.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBodyPart">
      <MemberSignature Language="C#" Value="public MimeKit.MimeEntity GetBodyPart (MailKit.UniqueId uid, string partSpecifier, bool headersOnly, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class MimeKit.MimeEntity GetBodyPart(valuetype MailKit.UniqueId uid, string partSpecifier, bool headersOnly, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="MailKit.UniqueId" />
        <Parameter Name="partSpecifier" Type="System.String" />
        <Parameter Name="headersOnly" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message.</param>
        <param name="partSpecifier">The body part specifier.</param>
        <param name="headersOnly">
          <c>true</c> if only the headers should be downloaded; otherwise, <c>false</c>&gt;</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets the specified body part.
            </summary>
        <returns>The body part.</returns>
        <remarks>
            Gets the specified body part.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partSpecifier" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="uid" /> is invalid.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBodyPart">
      <MemberSignature Language="C#" Value="public override MimeKit.MimeEntity GetBodyPart (int index, MailKit.BodyPart part, bool headersOnly, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class MimeKit.MimeEntity GetBodyPart(int32 index, class MailKit.BodyPart part, bool headersOnly, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="part" Type="MailKit.BodyPart" />
        <Parameter Name="headersOnly" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="part">The body part.</param>
        <param name="headersOnly">
          <c>true</c> if only the headers should be downloaded; otherwise, <c>false</c>&gt;</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets the specified body part.
            </summary>
        <returns>The body part.</returns>
        <remarks>
            Gets the specified body part.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="part" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is out of range.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBodyPart">
      <MemberSignature Language="C#" Value="public MimeKit.MimeEntity GetBodyPart (int index, string partSpecifier, bool headersOnly, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class MimeKit.MimeEntity GetBodyPart(int32 index, string partSpecifier, bool headersOnly, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="partSpecifier" Type="System.String" />
        <Parameter Name="headersOnly" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="partSpecifier">The body part specifier.</param>
        <param name="headersOnly">
          <c>true</c> if only the headers should be downloaded; otherwise, <c>false</c>&gt;</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets the specified body part.
            </summary>
        <returns>The body part.</returns>
        <remarks>
            Gets the specified body part.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partSpecifier" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is out of range.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerator&lt;MimeKit.MimeMessage&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IEnumerator`1&lt;class MimeKit.MimeMessage&gt; GetEnumerator() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;MimeKit.MimeMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets an enumerator for the messages in the folder.
            </summary>
        <returns>The enumerator.</returns>
        <remarks>
            Gets an enumerator for the messages in the folder.
            </remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMessage">
      <MemberSignature Language="C#" Value="public override MimeKit.MimeMessage GetMessage (MailKit.UniqueId uid, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class MimeKit.MimeMessage GetMessage(valuetype MailKit.UniqueId uid, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="MailKit.UniqueId" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets the specified message.
            </summary>
        <returns>The message.</returns>
        <remarks>
            Gets the specified message.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uid" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="uid" /> is invalid.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMessage">
      <MemberSignature Language="C#" Value="public override MimeKit.MimeMessage GetMessage (int index, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class MimeKit.MimeMessage GetMessage(int32 index, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets the specified message.
            </summary>
        <returns>The message.</returns>
        <remarks>
            Gets the specified message.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is out of range.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetQuota">
      <MemberSignature Language="C#" Value="public override MailKit.FolderQuota GetQuota (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class MailKit.FolderQuota GetQuota(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.FolderQuota</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Get the quota information for the folder.
            </summary>
        <returns>The folder quota.</returns>
        <remarks>
          <para>Gets the quota information for the folder.</para>
          <para>To determine if a quotas are supported, check the
            <see cref="P:MailKit.Net.Imap.ImapClient.SupportsQuotas" /> property.</para>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The IMAP server does not support the QUOTA extension.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream GetStream (MailKit.UniqueId uid, int offset, int count, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream GetStream(valuetype MailKit.UniqueId uid, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="MailKit.UniqueId" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message.</param>
        <param name="offset">The starting offset of the first desired byte.</param>
        <param name="count">The number of bytes desired.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets a substream of the specified message.
            </summary>
        <returns>The stream.</returns>
        <remarks>
            Fetches a substream of the message. If the starting offset is beyond
            the end of the message, an empty stream is returned. If the number of
            bytes desired extends beyond the end of the message, a truncated stream
            will be returned.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="uid" /> is invalid.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <para>
            <paramref name="offset" /> is negative.</para>
          <para>-or-</para>
          <para>
            <paramref name="count" /> is negative.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream GetStream (int index, int offset, int count, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream GetStream(int32 index, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="offset">The starting offset of the first desired byte.</param>
        <param name="count">The number of bytes desired.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets a substream of the specified message.
            </summary>
        <returns>The stream.</returns>
        <remarks>
            Fetches a substream of the message. If the starting offset is beyond
            the end of the message, an empty stream is returned. If the number of
            bytes desired extends beyond the end of the message, a truncated stream
            will be returned.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <para>
            <paramref name="index" /> is out of range.</para>
          <para>-or-</para>
          <para>
            <paramref name="offset" /> is negative.</para>
          <para>-or-</para>
          <para>
            <paramref name="count" /> is negative.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream GetStream (MailKit.UniqueId uid, MailKit.BodyPart part, int offset, int count, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream GetStream(valuetype MailKit.UniqueId uid, class MailKit.BodyPart part, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="MailKit.UniqueId" />
        <Parameter Name="part" Type="MailKit.BodyPart" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message.</param>
        <param name="part">The desired body part.</param>
        <param name="offset">The starting offset of the first desired byte.</param>
        <param name="count">The number of bytes desired.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets a substream of the specified body part.
            </summary>
        <returns>The stream.</returns>
        <remarks>
            Fetches a substream of the body part. If the starting offset is beyond
            the end of the body part, an empty stream is returned. If the number of
            bytes desired extends beyond the end of the body part, a truncated stream
            will be returned.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="uid" /> is invalid.
            </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="part" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <para>
            <paramref name="offset" /> is negative.</para>
          <para>-or-</para>
          <para>
            <paramref name="count" /> is negative.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream GetStream (int index, MailKit.BodyPart part, int offset, int count, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream GetStream(int32 index, class MailKit.BodyPart part, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="part" Type="MailKit.BodyPart" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="part">The desired body part.</param>
        <param name="offset">The starting offset of the first desired byte.</param>
        <param name="count">The number of bytes desired.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets a substream of the specified body part.
            </summary>
        <returns>The stream.</returns>
        <remarks>
            Fetches a substream of the body part. If the starting offset is beyond
            the end of the body part, an empty stream is returned. If the number of
            bytes desired extends beyond the end of the body part, a truncated stream
            will be returned.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="part" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <para>
            <paramref name="index" /> is out of range.</para>
          <para>-or-</para>
          <para>
            <paramref name="offset" /> is negative.</para>
          <para>-or-</para>
          <para>
            <paramref name="count" /> is negative.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubfolder">
      <MemberSignature Language="C#" Value="public override MailKit.IMailFolder GetSubfolder (string name, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class MailKit.IMailFolder GetSubfolder(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.IMailFolder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of the subfolder.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets the specified subfolder.
            </summary>
        <returns>The subfolder.</returns>
        <remarks>
            Gets the specified subfolder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is either an empty string or contains the <see cref="P:MailKit.MailFolder.DirectorySeparator" />.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> is either not connected or not authenticated.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.FolderNotFoundException">
            The requested folder could not be found.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubfolders">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;MailKit.IMailFolder&gt; GetSubfolders (bool subscribedOnly = false, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IEnumerable`1&lt;class MailKit.IMailFolder&gt; GetSubfolders(bool subscribedOnly, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;MailKit.IMailFolder&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscribedOnly" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscribedOnly">If set to <c>true</c>, only subscribed folders will be listed.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets the subfolders.
            </summary>
        <returns>The subfolders.</returns>
        <remarks>
            Gets the subfolders.
            </remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> is either not connected or not authenticated.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="IsOpen">
      <MemberSignature Language="C#" Value="public override bool IsOpen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOpen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether the folder is currently open.
            </summary>
        <value>
          <c>true</c> if the folder is currently open; otherwise, <c>false</c>.</value>
        <remarks>
            Gets a value indicating whether the folder is currently open.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; MoveTo (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, MailKit.IMailFolder destination, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; MoveTo(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, class MailKit.IMailFolder destination, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="destination" Type="MailKit.IMailFolder" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages to move.</param>
        <param name="destination">The destination folder.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Moves the specified messages to the destination folder.
            </summary>
        <returns>The UIDs of the messages in the destination folder, if available; otherwise an empty array.</returns>
        <remarks>
          <para>If the IMAP server supports the MOVE command, then the MOVE command will be used. Otherwise,
            the messages will first be copied to the destination folder, then marked as \Deleted in the
            originating folder, and finally, if the server supports the UIDPLUS extension, expunged. Since the
            server could disconnect at any point between those 3 operations, it may be advisable to implement
            your own logic for moving messages in this case in order to better handle spontanious server
            disconnects and other error conditions.</para>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="destination" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>The destination folder does not belong to the <see cref="T:MailKit.Net.Imap.ImapClient" />.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The IMAP server does not support the UIDPLUS extension.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public override void MoveTo (System.Collections.Generic.IList&lt;int&gt; indexes, MailKit.IMailFolder destination, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void MoveTo(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, class MailKit.IMailFolder destination, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="destination" Type="MailKit.IMailFolder" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages to move.</param>
        <param name="destination">The destination folder.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Moves the specified messages to the destination folder.
            </summary>
        <remarks>
          <para>If the IMAP server supports the MOVE command, then the MOVE command will be used. Otherwise,
            the messages will first be copied to the destination folder and then marked as \Deleted in the
            originating folder. Since the server could disconnect at any point between those 2 operations, it
            may be advisable to implement your own logic for moving messages in this case in order to better
            handle spontanious server disconnects and other error conditions.</para>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="indexes" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="destination" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>The destination folder does not belong to the <see cref="T:MailKit.Net.Imap.ImapClient" />.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public override MailKit.FolderAccess Open (MailKit.FolderAccess access, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype MailKit.FolderAccess Open(valuetype MailKit.FolderAccess access, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.FolderAccess</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="access" Type="MailKit.FolderAccess" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="access">The requested folder access.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Opens the folder using the requested folder access.
            </summary>
        <returns>The <see cref="T:MailKit.FolderAccess" /> state of the folder.</returns>
        <remarks>
            Opens the folder using the requested folder access.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="access" /> is not a valid value.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> is either not connected or not authenticated.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public override MailKit.FolderAccess Open (MailKit.FolderAccess access, MailKit.UniqueId uidValidity, ulong highestModSeq, System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype MailKit.FolderAccess Open(valuetype MailKit.FolderAccess access, valuetype MailKit.UniqueId uidValidity, unsigned int64 highestModSeq, class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.FolderAccess</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="access" Type="MailKit.FolderAccess" />
        <Parameter Name="uidValidity" Type="MailKit.UniqueId" />
        <Parameter Name="highestModSeq" Type="System.UInt64" />
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="access">The requested folder access.</param>
        <param name="uidValidity">The last known <see cref="P:MailKit.MailFolder.UidValidity" /> value.</param>
        <param name="highestModSeq">The last known <see cref="P:MailKit.MailFolder.HighestModSeq" /> value.</param>
        <param name="uids">The last known list of unique message identifiers.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Opens the folder using the requested folder access.
            </summary>
        <returns>The <see cref="T:MailKit.FolderAccess" /> state of the folder.</returns>
        <remarks>
          <para>This variant of the <see cref="M:MailKit.Net.Imap.ImapFolder.Open(MailKit.FolderAccess,System.Threading.CancellationToken)" />
            method is meant for quick resynchronization of the folder. Before calling this method,
            the <see cref="M:MailKit.Net.Imap.ImapClient.EnableQuickResync(System.Threading.CancellationToken)" /> method MUST be called.</para>
          <para>You should also make sure to add listeners to the <see cref="E:MailKit.MailFolder.MessagesVanished" /> and
            <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events to get notifications of changes since
            the last time the folder was opened.</para>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="access" /> is not a valid value.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is either not connected or not authenticated.</para>
          <para>-or-</para>
          <para>The QRESYNC feature has not been enabled.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The IMAP server does not support the QRESYNC extension.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveFlags">
      <MemberSignature Language="C#" Value="public override void RemoveFlags (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveFlags(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="flags">The message flags to remove.</param>
        <param name="userFlags">A set of user-defined flags to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Removes a set of flags from the specified messages.
            </summary>
        <remarks>
            Removes a set of flags from the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveFlags">
      <MemberSignature Language="C#" Value="public override void RemoveFlags (System.Collections.Generic.IList&lt;int&gt; indexes, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveFlags(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="flags">The message flags to remove.</param>
        <param name="userFlags">A set of user-defined flags to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Removes a set of flags from the specified messages.
            </summary>
        <remarks>
            Removes a set of flags from the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indexes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveFlags">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; RemoveFlags (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, ulong modseq, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; RemoveFlags(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, unsigned int64 modseq, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="flags">The message flags to remove.</param>
        <param name="userFlags">A set of user-defined flags to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Removes a set of flags from the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The unique IDs of the messages that were not updated.</returns>
        <remarks>
            Removes a set of flags from the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.Net.Imap.ImapFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveFlags">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;int&gt; RemoveFlags (System.Collections.Generic.IList&lt;int&gt; indexes, ulong modseq, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;int32&gt; RemoveFlags(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, unsigned int64 modseq, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="flags">The message flags to remove.</param>
        <param name="userFlags">A set of user-defined flags to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Removes a set of flags from the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The indexes of the messages that were not updated.</returns>
        <remarks>
            Removes a set of flags from the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indexes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.Net.Imap.ImapFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveLabels">
      <MemberSignature Language="C#" Value="public override void RemoveLabels (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveLabels(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="labels">The labels to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Remove a set of labels from the specified messages.
            </summary>
        <remarks>
            Removes a set of labels from the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="labels" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveLabels">
      <MemberSignature Language="C#" Value="public override void RemoveLabels (System.Collections.Generic.IList&lt;int&gt; indexes, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveLabels(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="labels">The labels to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Remove a set of labels from the specified messages.
            </summary>
        <remarks>
            Removes a set of labels from the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="indexes" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="labels" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveLabels">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; RemoveLabels (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, ulong modseq, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; RemoveLabels(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, unsigned int64 modseq, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="labels">The labels to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Remove a set of labels from the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The unique IDs of the messages that were not updated.</returns>
        <remarks>
            Removes a set of labels from the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="labels" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveLabels">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;int&gt; RemoveLabels (System.Collections.Generic.IList&lt;int&gt; indexes, ulong modseq, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;int32&gt; RemoveLabels(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, unsigned int64 modseq, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="labels">The labels to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Remove a set of labels from the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The indexes of the messages that were not updated.</returns>
        <remarks>
            Removes a set of labels from the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="indexes" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="labels" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Rename">
      <MemberSignature Language="C#" Value="public override void Rename (MailKit.IMailFolder parent, string name, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rename(class MailKit.IMailFolder parent, string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="MailKit.IMailFolder" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="parent">The new parent folder.</param>
        <param name="name">The new name of the folder.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Renames the folder to exist with a new name under a new parent folder.
            </summary>
        <remarks>
            Renames the folder to exist with a new name under a new parent folder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="parent" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="name" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="parent" /> does not belong to the <see cref="T:MailKit.Net.Imap.ImapClient" />.</para>
          <para>-or-</para>
          <para>
            <paramref name="name" /> is not a legal folder name.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is either not connected or not authenticated.</para>
          <para>-or-</para>
          <para>The folder cannot be renamed (it is either a namespace or the Inbox).</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Search">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; Search (MailKit.Search.SearchQuery query, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; Search(class MailKit.Search.SearchQuery query, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="MailKit.Search.SearchQuery" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="query">The search query.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Searches the folder for messages matching the specified query.
            </summary>
        <returns>An array of matching UIDs.</returns>
        <remarks>
            The returned array of unique identifiers can be used with <see cref="M:MailKit.IMailFolder.GetMessage(MailKit.UniqueId,System.Threading.CancellationToken)" />.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="query" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.NotSupportedException">
            One or more search terms in the <paramref name="query" /> are not supported by the IMAP server.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Search">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; Search (MailKit.Search.SearchQuery query, System.Collections.Generic.IList&lt;MailKit.Search.OrderBy&gt; orderBy, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; Search(class MailKit.Search.SearchQuery query, class System.Collections.Generic.IList`1&lt;class MailKit.Search.OrderBy&gt; orderBy, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="MailKit.Search.SearchQuery" />
        <Parameter Name="orderBy" Type="System.Collections.Generic.IList&lt;MailKit.Search.OrderBy&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="query">The search query.</param>
        <param name="orderBy">The sort order.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Searches the folder for messages matching the specified query,
            returning them in the preferred sort order.
            </summary>
        <returns>An array of matching UIDs in the specified sort order.</returns>
        <remarks>
            The returned array of unique identifiers will be sorted in the preferred order and
            can be used with <see cref="M:MailKit.IMailFolder.GetMessage(MailKit.UniqueId,System.Threading.CancellationToken)" />.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="query" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="orderBy" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="orderBy" /> is empty.
            </exception>
        <exception cref="T:System.NotSupportedException">
          <para>One or more search terms in the <paramref name="query" /> are not supported by the IMAP server.</para>
          <para>-or-</para>
          <para>The server does not support the SORT extension.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Search">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; Search (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, MailKit.Search.SearchQuery query, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; Search(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, class MailKit.Search.SearchQuery query, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="query" Type="MailKit.Search.SearchQuery" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The subset of UIDs</param>
        <param name="query">The search query.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Searches the subset of UIDs in the folder for messages matching the specified query.
            </summary>
        <returns>An array of matching UIDs.</returns>
        <remarks>
            The returned array of unique identifiers can be used with <see cref="M:MailKit.IMailFolder.GetMessage(MailKit.UniqueId,System.Threading.CancellationToken)" />.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="query" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            One or more search terms in the <paramref name="query" /> are not supported by the IMAP server.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Search">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; Search (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, MailKit.Search.SearchQuery query, System.Collections.Generic.IList&lt;MailKit.Search.OrderBy&gt; orderBy, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; Search(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, class MailKit.Search.SearchQuery query, class System.Collections.Generic.IList`1&lt;class MailKit.Search.OrderBy&gt; orderBy, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="query" Type="MailKit.Search.SearchQuery" />
        <Parameter Name="orderBy" Type="System.Collections.Generic.IList&lt;MailKit.Search.OrderBy&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The subset of UIDs</param>
        <param name="query">The search query.</param>
        <param name="orderBy">The sort order.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Searches the subset of UIDs in the folder for messages matching the specified query,
            returning them in the preferred sort order.
            </summary>
        <returns>An array of matching UIDs in the specified sort order.</returns>
        <remarks>
            The returned array of unique identifiers will be sorted in the preferred order and
            can be used with <see cref="M:MailKit.IMailFolder.GetMessage(MailKit.UniqueId,System.Threading.CancellationToken)" />.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="query" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="orderBy" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>
            <paramref name="orderBy" /> is empty.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <para>One or more search terms in the <paramref name="query" /> are not supported by the IMAP server.</para>
          <para>-or-</para>
          <para>The server does not support the SORT extension.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetFlags">
      <MemberSignature Language="C#" Value="public override void SetFlags (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetFlags(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="flags">The message flags to set.</param>
        <param name="userFlags">A set of user-defined flags to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Sets the flags of the specified messages.
            </summary>
        <remarks>
            Sets the flags of the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetFlags">
      <MemberSignature Language="C#" Value="public override void SetFlags (System.Collections.Generic.IList&lt;int&gt; indexes, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetFlags(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="flags">The message flags to set.</param>
        <param name="userFlags">A set of user-defined flags to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Sets the flags of the specified messages.
            </summary>
        <remarks>
            Sets the flags of the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indexes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetFlags">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; SetFlags (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, ulong modseq, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; SetFlags(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, unsigned int64 modseq, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="flags">The message flags to set.</param>
        <param name="userFlags">A set of user-defined flags to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Sets the flags of the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The unique IDs of the messages that were not updated.</returns>
        <remarks>
            Sets the flags of the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.Net.Imap.ImapFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetFlags">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;int&gt; SetFlags (System.Collections.Generic.IList&lt;int&gt; indexes, ulong modseq, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;int32&gt; SetFlags(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, unsigned int64 modseq, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="flags">The message flags to set.</param>
        <param name="userFlags">A set of user-defined flags to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Sets the flags of the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The indexes of the messages that were not updated.</returns>
        <remarks>
            Sets the flags of the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indexes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.Net.Imap.ImapFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLabels">
      <MemberSignature Language="C#" Value="public override void SetLabels (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLabels(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="labels">The labels to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Set the labels of the specified messages.
            </summary>
        <remarks>
            Sets the labels of the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="labels" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLabels">
      <MemberSignature Language="C#" Value="public override void SetLabels (System.Collections.Generic.IList&lt;int&gt; indexes, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLabels(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="labels">The labels to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Sets the labels of the specified messages.
            </summary>
        <remarks>
            Sets the labels of the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="indexes" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="labels" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLabels">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; SetLabels (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, ulong modseq, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; SetLabels(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, unsigned int64 modseq, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="labels">The labels to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Set the labels of the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The unique IDs of the messages that were not updated.</returns>
        <remarks>
            Sets the labels of the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="labels" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLabels">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;int&gt; SetLabels (System.Collections.Generic.IList&lt;int&gt; indexes, ulong modseq, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;int32&gt; SetLabels(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, unsigned int64 modseq, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="labels">The labels to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Set the labels of the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The indexes of the messages that were not updated.</returns>
        <remarks>
            Sets the labels of the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="indexes" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="labels" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetQuota">
      <MemberSignature Language="C#" Value="public override MailKit.FolderQuota SetQuota (Nullable&lt;uint&gt; messageLimit, Nullable&lt;uint&gt; storageLimit, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class MailKit.FolderQuota SetQuota(valuetype System.Nullable`1&lt;unsigned int32&gt; messageLimit, valuetype System.Nullable`1&lt;unsigned int32&gt; storageLimit, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.FolderQuota</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageLimit" Type="System.Nullable&lt;System.UInt32&gt;" />
        <Parameter Name="storageLimit" Type="System.Nullable&lt;System.UInt32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messageLimit">If not <c>null</c>, sets the maximum number of messages to allow.</param>
        <param name="storageLimit">If not <c>null</c>, sets the maximum storage size (in kilobytes).</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Set the quota limits for the folder.
            </summary>
        <returns>The folder quota.</returns>
        <remarks>
          <para>Sets the quota limits for the folder.</para>
          <para>To determine if a quotas are supported, check the
            <see cref="P:MailKit.Net.Imap.ImapClient.SupportsQuotas" /> property.</para>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The IMAP server does not support the QUOTA extension.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public override void Status (MailKit.StatusItems items, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Status(valuetype MailKit.StatusItems items, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="MailKit.StatusItems" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="items">The items to update.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Updates the values of the specified items.
            </summary>
        <remarks>
          <para>Updates the values of the specified items.</para>
          <para>The <see cref="M:MailKit.Net.Imap.ImapFolder.Status(MailKit.StatusItems,System.Threading.CancellationToken)" /> method
            MUST NOT be used on a folder that is already in the opened state. Instead, other ways
            of getting the desired information should be used.</para>
          <para>For example, a common use for the <see cref="M:MailKit.Net.Imap.ImapFolder.Status(MailKit.StatusItems,System.Threading.CancellationToken)" />
            method is to get the number of unread messages in the folder. When the folder is open, however, it is
            possible to use the <see cref="M:MailKit.Net.Imap.ImapFolder.Search(MailKit.Search.SearchQuery,System.Threading.CancellationToken)" />
            method to query for the list of unread messages.</para>
        </remarks>
        <exception cref="T:System.NotSupportedException">
            The IMAP server does not support the STATUS command.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Subscribe">
      <MemberSignature Language="C#" Value="public override void Subscribe (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Subscribe(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Subscribes the folder.
            </summary>
        <remarks>
            Subscribes the folder.
            </remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> is either not connected or not authenticated.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public override object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets an object that can be used to synchronize access to the folder.
            </summary>
        <value>The sync root.</value>
        <remarks>
            Gets an object that can be used to synchronize access to the folder.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Thread">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;MailKit.MessageThread&gt; Thread (MailKit.ThreadingAlgorithm algorithm, MailKit.Search.SearchQuery query, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class MailKit.MessageThread&gt; Thread(valuetype MailKit.ThreadingAlgorithm algorithm, class MailKit.Search.SearchQuery query, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.MessageThread&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="MailKit.ThreadingAlgorithm" />
        <Parameter Name="query" Type="MailKit.Search.SearchQuery" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The threading algorithm to use.</param>
        <param name="query">The search query.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Threads the messages in the folder that match the search query using the specified threading algorithm.
            </summary>
        <returns>An array of message threads.</returns>
        <remarks>
            The <see cref="P:MailKit.MessageThread.UniqueId" /> can be used with <see cref="M:MailKit.IMailFolder.GetMessage(MailKit.UniqueId,System.Threading.CancellationToken)" />.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="algorithm" /> is not supported.
            </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="query" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.NotSupportedException">
          <para>One or more search terms in the <paramref name="query" /> are not supported by the IMAP server.</para>
          <para>-or-</para>
          <para>The server does not support the THREAD extension.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Thread">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;MailKit.MessageThread&gt; Thread (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, MailKit.ThreadingAlgorithm algorithm, MailKit.Search.SearchQuery query, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class MailKit.MessageThread&gt; Thread(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, valuetype MailKit.ThreadingAlgorithm algorithm, class MailKit.Search.SearchQuery query, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.MessageThread&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="algorithm" Type="MailKit.ThreadingAlgorithm" />
        <Parameter Name="query" Type="MailKit.Search.SearchQuery" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The subset of UIDs</param>
        <param name="algorithm">The threading algorithm to use.</param>
        <param name="query">The search query.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Threads the messages in the folder that match the search query using the specified threading algorithm.
            </summary>
        <returns>An array of message threads.</returns>
        <remarks>
            The <see cref="P:MailKit.MessageThread.UniqueId" /> can be used with <see cref="M:MailKit.IMailFolder.GetMessage(MailKit.UniqueId,System.Threading.CancellationToken)" />.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="algorithm" /> is not supported.
            </exception>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="query" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <para>One or more search terms in the <paramref name="query" /> are not supported by the IMAP server.</para>
          <para>-or-</para>
          <para>The server does not support the THREAD extension.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Unsubscribe">
      <MemberSignature Language="C#" Value="public override void Unsubscribe (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Unsubscribe(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Unsubscribes the folder.
            </summary>
        <remarks>
            Unsubscribes the folder.
            </remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> is either not connected or not authenticated.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>
